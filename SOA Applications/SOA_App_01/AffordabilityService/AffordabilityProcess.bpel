<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Oct 22 11:38:10 CAT 2014
  Author:  user
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="AffordabilityProcess"
               targetNamespace="http://xmlns.oracle.com/SOA_App_01/AffordabilityService/AffordabilityProcess"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/SOA_App_01/AffordabilityService/AffordabilityProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/AffordabilityRule1/AffordabilityDecisionService_1"
         xmlns:ns2="http://www.reverside.co.za/schema/vehicle_system"
         xmlns:ns3="http://xmlns.oracle.com/bpel"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.oracle.com/AffordabilityRule2/AffordabilityDecisionService_2"
         xmlns:ns5="http://xmlns.oracle.com/AffordabilityRule3/AffordabilityDecisionService_3"
         xmlns:ns6="http://xmlns.oracle.com/SOA_App_01/AffordabilityService/AffordabiityServiceMediator">

    <import namespace="http://xmlns.oracle.com/SOA_App_01/AffordabilityService/AffordabilityProcess" location="AffordabilityProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="affordabilityprocess_client" partnerLinkType="client:AffordabilityProcess" myRole="AffordabilityProcessProvider"/>
    <partnerLink name="AffordabilityRule1.AffordabilityDecisionService_1"
                 partnerLinkType="ns1:AffordabilityRule1.AffordabilityDecisionService_1"
                 partnerRole="IDecisionService"/>
    <partnerLink name="AffordabilityRule2.AffordabilityDecisionService_2"
                 partnerLinkType="ns4:AffordabilityRule2.AffordabilityDecisionService_2"
                 partnerRole="IDecisionService"/>
    <partnerLink name="AffordabilityRule3.AffordabilityDecisionService_3"
                 partnerLinkType="ns5:AffordabilityRule3.AffordabilityDecisionService_3"
                 partnerRole="IDecisionService"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:AffordabilityProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:AffordabilityProcessResponseMessage"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in AffordabilityProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="affordabilityprocess_client" portType="client:AffordabilityProcess" operation="process" variable="inputVariable" createInstance="yes"/>
    <validate name="validateInput" variables="inputVariable"/>
    <scope name="Rule1" exitOnStandardFault="no">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:decide"/>
        <bpelx:general>
          <bpelx:property name="userLabel">
            <![CDATA[checkMinimumIncome]]>
          </bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <variables>
        <variable name="dsIn" messageType="ns1:callFunctionStatelessMessage"/>
        <variable name="dsOut"
                  messageType="ns1:callFunctionStatelessDecisionMessage"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="Facts_To_Rule_Service">
          <copy>
            <from variable="inputVariable" part="payload"/>
            <to variable="dsIn" part="payload">
              <query>ns1:parameterList/ns2:AffordabilityServiceInput</query>
            </to>
          </copy>
        </assign>
        <assign name="BPEL_Header">
          <copy>
            <from>"AffordabilityDecisionService_1"</from>
            <to variable="dsIn" part="payload">
              <query>@name</query>
            </to>
          </copy>
        </assign>
        <invoke name="Invoke"
                partnerLink="AffordabilityRule1.AffordabilityDecisionService_1"
                portType="ns1:IDecisionService"
                operation="callFunctionStateless" inputVariable="dsIn"
                outputVariable="dsOut"/>
        <assign name="Rule_Service_To_Facts">
          <copy>
            <from variable="dsOut" part="payload"><query>ns1:resultList/ns2:AffordabilityServiceOutput/ns2:CanAfford</query></from>
            <to variable="outputVariable" part="payload">
              <query>ns2:CanAfford</query>
            </to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <if name="If1">
      <documentation>
        <![CDATA[GreaterThanMinimumIncome]]>
      </documentation>
      <condition>$outputVariable.payload/ns2:CanAfford   =  true()</condition>
      <sequence name="Sequence2">
        <scope name="Rule2" exitOnStandardFault="no">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:decide"/>
            <bpelx:general>
              <bpelx:property name="userLabel">
                <![CDATA[checkAmountLeft]]>
              </bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <variables>
            <variable name="dsIn"
                      messageType="ns4:callFunctionStatelessMessage"/>
            <variable name="dsOut"
                      messageType="ns4:callFunctionStatelessDecisionMessage"/>
          </variables>
          <sequence name="Sequence3">
            <assign name="Facts_To_Rule_Service">
              <copy>
                <from variable="inputVariable" part="payload"/>
                <to variable="dsIn" part="payload">
                  <query>ns4:parameterList/ns2:AffordabilityServiceInput</query>
                </to>
              </copy>
            </assign>
            <assign name="BPEL_Header">
              <copy>
                <from>"AffordabilityDecisionService_2"</from>
                <to variable="dsIn" part="payload">
                  <query>@name</query>
                </to>
              </copy>
            </assign>
            <invoke name="Invoke"
                    partnerLink="AffordabilityRule2.AffordabilityDecisionService_2"
                    portType="ns4:IDecisionService"
                    operation="callFunctionStateless" inputVariable="dsIn"
                    outputVariable="dsOut"/>
            <assign name="Rule_Service_To_Facts">
              <copy>
                <from variable="dsOut" part="payload"><query>ns4:resultList/ns2:AffordabilityServiceOutput/ns2:CanAfford</query></from>
                <to variable="outputVariable" part="payload">
                  <query>ns2:CanAfford</query>
                </to>
              </copy>
            </assign>
          </sequence>
        </scope>
        <if name="If2">
          <documentation>
            <![CDATA[Amount Left Is Sufficient]]>
          </documentation>
          <condition>$outputVariable.payload/ns2:CanAfford = true()</condition>
          <sequence name="Sequence4">
            <scope name="Rule3" exitOnStandardFault="no">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:decide"/>
                <bpelx:general>
                  <bpelx:property name="userLabel">
                    <![CDATA[checkMaximumAllowed]]>
                  </bpelx:property>
                </bpelx:general>
              </bpelx:annotation>
              <variables>
                <variable name="dsIn"
                          messageType="ns5:callFunctionStatelessMessage"/>
                <variable name="dsOut"
                          messageType="ns5:callFunctionStatelessDecisionMessage"/>
              </variables>
              <sequence name="Sequence5">
                <assign name="Facts_To_Rule_Service">
                  <copy>
                    <from variable="inputVariable" part="payload"/>
                    <to variable="dsIn" part="payload">
                      <query>ns5:parameterList/ns2:AffordabilityServiceInput</query>
                    </to>
                  </copy>
                </assign>
                <assign name="BPEL_Header">
                  <copy>
                    <from>"AffordabilityDecisionService_3"</from>
                    <to variable="dsIn" part="payload">
                      <query>@name</query>
                    </to>
                  </copy>
                </assign>
                <invoke name="Invoke"
                        partnerLink="AffordabilityRule3.AffordabilityDecisionService_3"
                        portType="ns5:IDecisionService"
                        operation="callFunctionStateless" inputVariable="dsIn"
                        outputVariable="dsOut"/>
                <assign name="Rule_Service_To_Facts">
                  <copy>
                    <from variable="dsOut" part="payload"><query>ns5:resultList/ns2:AffordabilityServiceOutput/ns2:CanAfford</query></from>
                    <to variable="outputVariable" part="payload">
                      <query>ns2:CanAfford</query>
                    </to>
                  </copy>
                </assign>
              </sequence>
            </scope>
            <if name="If3">
              <documentation>
                <![CDATA[Requested More Than Can Afford]]>
              </documentation>
              <condition>$outputVariable.payload/ns2:CanAfford = false()</condition>
              <assign name="AssignCannotAfford">
                <copy>
                  <from>$outputVariable.payload/ns2:CanAfford  = false()</from>
                  <to>$outputVariable</to>
                </copy>
              </assign>
              <else>
                <documentation>
                  <![CDATA[Requested What Can Afford]]>
                </documentation>
                <assign name="AssignCanAfford">
                  <copy>
                    <from>$outputVariable.payload/ns2:CanAfford = true()</from>
                    <to>$outputVariable.payload/ns2:CanAfford</to>
                  </copy>
                </assign>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[Amount Left Insufficient]]>
            </documentation>
            <assign name="AssignCannotAfford">
              <copy>
                <from>$outputVariable.payload/ns2:CanAfford = false()</from>
                <to>$outputVariable.payload/ns2:CanAfford</to>
              </copy>
            </assign>
          </else>
        </if>
      </sequence>
      <else>
        <documentation>
          <![CDATA[LessThanMinimumIncome]]>
        </documentation>
        <assign name="AssignCannotAfford">
          <copy>
            <from>$outputVariable.payload/ns2:CanAfford = false()</from>
            <to>$outputVariable.payload/ns2:CanAfford</to>
          </copy>
        </assign>
      </else>
    </if>
    <assign name="AssignOutput">
      <copy>
        <from>$outputVariable.payload/ns2:CanAfford</from>
        <to>$outputVariable.payload/ns2:CanAfford</to>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="affordabilityprocess_client" portType="client:AffordabilityProcess" operation="process" variable="outputVariable"/>
  </sequence>
</process>